{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport mongoose from 'mongoose';\nvar connection = {};\n\nfunction dbConnect() {\n  return _dbConnect.apply(this, arguments);\n}\n\nfunction _dbConnect() {\n  _dbConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var db;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!connection.isConnected) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return mongoose.connect(process.env.MONGO_URI, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 5:\n            db = _context.sent;\n            // connection.isConnected = db.connections[0].readyState;\n            console.log(db);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            process.exit(1);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n  return _dbConnect.apply(this, arguments);\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["C:/xampp/htdocs/flmyapp/spa/nextjs/utils/dbConnect.js"],"names":["mongoose","connection","dbConnect","isConnected","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","db","console","log","exit"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,UAAU,GAAG,EAAnB;;SAEeC,S;;;;;wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAEYD,UAAU,CAACE,WAFvB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAMyBH,QAAQ,CAACI,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACrDC,cAAAA,eAAe,EAAE,IADoC;AAErDC,cAAAA,kBAAkB,EAAE;AAFiC,aAAxC,CANzB;;AAAA;AAMcC,YAAAA,EANd;AAWQ;AAEAC,YAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAbR;AAAA;;AAAA;AAAA;AAAA;AAeQC,YAAAA,OAAO,CAACC,GAAR;AACAP,YAAAA,OAAO,CAACQ,IAAR,CAAa,CAAb;;AAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAoBA,eAAeX,SAAf","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst connection = {};\r\n\r\nasync function dbConnect() {\r\n    try {\r\n        if (connection.isConnected) {\r\n            return;\r\n        }\r\n\r\n        const db = await mongoose.connect(process.env.MONGO_URI, {\r\n            useNewUrlParser: true,\r\n            useUnifiedTopology: true\r\n        });\r\n\r\n        // connection.isConnected = db.connections[0].readyState;\r\n\r\n        console.log(db);\r\n    }catch (e) {\r\n        console.log(e);\r\n        process.exit(1);\r\n    }\r\n}\r\n\r\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}